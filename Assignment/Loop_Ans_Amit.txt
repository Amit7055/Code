/*
1.	Write a program in C to display the first 10 natural numbers.
	Expected Output :
		1 2 3 4 5 6 7 8 9 10
*/

#include<stdio.h>
main()
{
	int i=0;
	
	printf("Using While loop:\t");
	
	while(i<=10)
	{
		printf("%d\t",i);
		i++;
	}
	
	printf("\nUsing For loop:\t\t");
	
	for(i=0;i<=10;i++)
	{
		printf("%d\t",i);
	}
	
}




/*
2.	Write a C program to find the sum of first 10 natural numbers.
	Expected Output :
		The first 10 natural number is :
		1 2 3 4 5 6 7 8 9 10
		The Sum is : 55
*/

#include<stdio.h>
main()
{
	int i=0,sum=0;
	
	printf("Using While loop:\t");
	
	while(i<=10)
	{
		printf("%d\t",i);
		sum=sum+i;
		i++;
	}
	
	printf("\nThe Sum is :\t%d",sum);
	
	printf("\n-----------------------------------------");
	
	sum=0;
	
	printf("\nUsing For loop:\t\t");
	
	for(i=0;i<=10;i++)
	{
		printf("%d\t",i);
		sum=sum+i;
	}
	
	printf("\nThe Sum is :\t%d",sum);
}




/*
3.	Write a program in C to display n terms of natural number and their sum. 
	Test Data : 7
	Expected Output :
		The first 7 natural number is :
		1 2 3 4 5 6 7
		The Sum of Natural Number upto 7 terms : 28
*/


#include<stdio.h>
main()
{
	int i=1,sum=0,n;
	
	printf("Test Data:\t");
	scanf("%d",&n);
	
	printf("\nUsing While loop:\t");
	
	printf("\nThe first 7 natural number is:\n");
	
	while(i<=n)
	{
		printf("%d\t",i);
		sum=sum+i;
		i++;
	}
	
	printf("\nThe Sum of Natural Number upto %d terms :\t%d",i,sum);
	
	printf("\n-----------------------------------------");
	
	sum=0;
	
	printf("\nUsing For loop:\t\t");
	
	printf("\nThe first 7 natural number is:\n");
	
	for(i=1;i<=n;i++)
	{
		printf("%d\t",i);
		sum=sum+i;
	}
	
	printf("\nThe Sum of Natural Number upto %d terms :\t%d",i-1,sum);
}



/*
4.	Write a program in C to read 10 numbers from keyboard and find their sum and average.
		Test Data :
		Input the 10 numbers : 
		Number1 : 2
			.
			.
			.
		Number10 :25
		Expected Output :
			The sum of 10 no is : 55 The Average is : 5.500000
*/

#include<stdio.h>
main()
{
	int i=1,n,sum=0;
	
	float avg;
	
	printf("Using While loop:\n");
	
	while(i<=10)
	{
		printf("Enter number %d : ",i);
		scanf("%d",&n);
		sum=sum+n;
		i++;
	}
	
	printf("\nThe sum of given ten numbers are : %d",sum);
	
	avg=(float)sum/10;
	
	printf("\nThe average of given ten numbers are : %.2f",avg);
	
	printf("\n---------------------------------------------");
	
	printf("\nUsing For loop:\n");
	
	sum=0;
	
	for(i=1;i<=10;i++)
	{
		printf("Enter number %d : ",i);
		scanf("%d",&n);
		sum=sum+n;
	}
	
	printf("\nThe sum of given ten numbers are : %d",sum);
	
	avg=(float)sum/10;
	
	printf("\nThe average of given ten numbers are : %.2f",avg);
	
}



/*
5.	Write a program in C to display the cube of the number upto given an integer.
	Test Data :
	Input number of terms : 5
	Expected Output :
		Number is : 1 and cube of the 1 is :1 
		Number is : 2 and cube of the 2 is :8 
		Number is : 3 and cube of the 3 is :27 
		Number is : 4 and cube of the 4 is :64 
		Number is : 5 and cube of the 5 is :125

*/

#include<stdio.h>
main()
{
	int i=1,n;
	
	printf("Using While loop:\n");
	
	printf("Enter number of terms  : ");
	scanf("%d",&n);
	
	while(i<=n)
	{
		printf("\nNumber is : \t%d and cube of %d is : \t%d",i,i,i*i*i);
		i++;
	}
	
	
	printf("\n---------------------------------------------");
	
	printf("\nUsing For loop:\n");
	
	for(i=1;i<=n;i++)
	{
		printf("\nNumber is : \t%d and cube of %d is : \t%d",i,i,i*i*i);
	}
	
}





/*
6.	Write a program in C to display the multiplication table of a given integer. 
	Test Data :
	Input the number (Table to be calculated) : 15
	Expected Output :
		15 X 1 = 15
			...
			...
		15 X 10 = 150
*/

#include<stdio.h>
main()
{
	int i=1,n;
	
	printf("Using While loop:\n");
	
	printf("Enter number (Table to be calculated) : ");
	scanf("%d",&n);
	
	while(i<=10)
	{
		printf("\n%d\tX\t%d\t=\t%d ",n,i,n*i);
		i++;
	}
	
	
	printf("\n---------------------------------------------");
	
	printf("\nUsing For loop:\n");
	
	for(i=1;i<=10;i++)
	{
		printf("\n%d\tX\t%d\t=\t%d ",n,i,n*i);
	}
	
}




/*
7.	Write a program in C to display the n terms of odd natural number and their sum .
	Test Data
		Input number of terms : 10
	Expected Output :
		The odd numbers are :1 3 5 7 9 11 13 15 17 19
		The Sum of odd Natural Number upto 10 terms : 100
*/

#include<stdio.h>
main()
{
	int a,n,i,sum=0,count;
	printf("Enter Numberof terms : ");
	scanf("%d",&a);
	
	printf("The odd numbers are : \t");
	for(i=1;i<=a;i++)
	{
		n=i*2-1;
		printf("%d\t",n);
		sum=sum+n;
	}
}


/*
8.	Write a program in C to display the pattern like right angle triangle using an asterisk.
The pattern like :
*
**
***
****
*/

#include<stdio.h>
main()
{
	int i,n;
	
	for(i=1;i<=5;i++)
	{
		for(n=1;n<=i;n++)
		{
			printf(" * ");
		}
		printf("\n");
	}
}


/*
9.	Write a program in C to display the pattern like right angle triangle with a number.
The pattern like :
1
12
123
1234
*/

#include<stdio.h>
main() 
{
    int i,n;
	
	for(i=1;i<=5;i++)
	{
		for(n=1;n<=i;n++)
		{
			printf(" %d ",i);
		}
		printf("\n");
	}
}



/*
10.	Write a program in C to make such a pattern like right angle triangle with a number which will repeat a number in a row.
The pattern like :
1
22
333
4444
*/

#include<stdio.h>
main()
{
	int i,j;
	
	for(i=1;i<=4;i++)
	{
		for(j=1;j<=i;j++)
		{
			printf(" %d ",j);
		}
		printf("\n");
	}
}


/*
11.	Write a program in C to make such a pattern like right angle triangle with number increased by 1.
The pattern like :
1
2 3
4 5 6
7 8 9 10
*/

#include<stdio.h>
main()
{
	int i,j,sum=1;
	
	for(i=1;i<=4;i++)
	{
		for(j=1;j<=i;j++)
		{
			printf(" %d ",sum);
			sum++;
		}
		printf("\n");
	}
}


/*12.	Write a program in C to make such a pattern like a pyramid with numbers increased by 1.
     1
   2 3
 4 5 6
7 8 9 10*/

#include <stdio.h>
main() 
{
    int i, j, number = 1;

    for (i = 1; i <= 5; i++) 
	{
        // Print spaces 
        for (j = 1; j <= 5 - i; j++)
		{
            printf("  ");
        }

        // Print numbers 
        for (j = 1; j <= i; j++) 
		{
            printf("%d   ", number);
            number++;
        }

        // Move to the next line
        printf("\n");
    }

}


/*
13.	Write a program in C to make such a pattern like a pyramid with an asterisk.
    *
  * *
 * * *
* * * *
*/

#include<stdio.h>
main()
{
	int i,j;
	
	for(i=1;i<=5;i++)
	{
		
		for(j = 1 ; j <= 5 - i ; j++)
		
		{
			printf("  ");
		}
		
		for(j=1;j<=i;j++)
		
		{
			printf("*   ");
		}
		
		printf("\n");
	}
}


/*
14.	Write a C program to calculate the factorial of a given number. 
	Test Data :
		Input the number : 5
	Expected Output :
		The Factorial of 5 is: 120
*/

#include <stdio.h>
main() 
{
    int num,i, fact=1; 

    printf("Input the number: ");
    scanf("%d", &num);

    for (i = 1; i <= num; ++i) 
	{
        fact*= i;
    }

    printf("The Factorial of %d is: %d\n", num, fact);

}


/*
15.	Write a program in C to display the n terms of even natural number and their sum.
	Test Data :
 		Input number of terms : 5
	Expected Output :
		The even numbers are :2 4 6 8 10
		The Sum of even Natural Number upto 5 terms : 30
*/

#include <stdio.h>
main() 
{
    int n, i,num,sum = 0;
    
    printf("Input number of terms: ");
    scanf("%d", &n);

    printf("The even numbers are: ");

    for (i = 1; i <= n; ++i) 
	{
		num=2*i;
        printf("%d ", num);
        sum += num;
        
    }

    printf("\nThe Sum of even Natural Number upto %d terms: %d\n", n, sum);

}


/*
16.	Write a program in C to make such a pattern like a pyramid with a number which will repeat the number in the same row.
      1
    2 2
  3 3 3
4 4 4 4
*/

#include<stdio.h>
main()
{
	int i,j;
	
	for(i=1;i<=5;i++)
	{
		for(j=1;j<=5-i;j++)
		{
			printf("  ");
		}
		for(j=1;j<=i;j++)
		{
			printf("%d ",i);
		}
		printf("\n");
	}
}


/*
17.	Write a program in C to display the pattern like a pyramid using asterisk and each row contain an odd number of asterisks.
      *
    ***
  *****

*/

#include<stdio.h>
main()
{
	int i,j;
	
	for(i=1;i<=5;i++)
	{
		for(j=1;j<=5-i;j++)
		{
			printf("  ");
		}
		for(j=1;j<=i;j++)
		{
			printf("* ");
		}
		printf("\n");
	}
}


/*18.	Write a program in C to display the sum of the series [ 9 + 99 + 999 + 9999 ...].
	Test Data :
		Input the number or terms :5
	Expected Output :
		9 99 999 9999 99999
		The sum of the saries = 111105*/
		

#include <stdio.h>
main() 
{
    int i,a,sum = 0,term = 9,a_term = 0;

    printf("Input the number of terms: ");
    scanf("%d", &a);

    printf("The series is: ");
    for (i = 1; i <= a; ++i) 
	{
        printf("%d ", term);
        sum += term;
        a_term = term * 10 + 9; 
        term = a_term;
    }
    printf("\nThe sum of the series = %d\n", sum);

}



/*
19.	Write a program in C to print the Floyd's Triangle.
1
01
101
0101
10101
*/

#include <stdio.h>
main() 
{
    int i,r,j,number = 1;

    printf("Enter the number : ");
    scanf("%d", &r);

    for (i=1; i<=r; i++) 
	{
        for (j=1; j<= i; j++) 
		{
            printf("%d ", (i+j)%2);
        }
        printf("\n");
    }
}




/*
20.	Write a program in C to display the n terms of square natural number and their sum.
1 4 9 16 ... n Terms 
	Test Data :
		Input the number of terms : 5
	Expected Output :
		The square natural upto 5 terms are :1 4 9 16 25
		The Sum of Square Natural Number upto 5 terms = 55
*/

#include <stdio.h>
main() 
{
    int n, sum = 0,i;

    printf("Enter number : ");
    scanf("%d", &n);

    printf("The square natural up to %d number are: ", n);

    for (i = 1; i <= n; ++i) 
	{
        int square = i * i;
        printf("%d ", square);
        sum += square;
    }

    printf("\nThe Sum of Square Natural Number up to %d terms = %d\n", n, sum);

}





/*
21.	Write a program in C to find the sum of the series 1 +11 + 111 + 1111 + .. n terms.
	Test Data :
		Input the number of terms : 5
	Expected Output :
		1 + 11 + 111 + 1111 + 11111
		The Sum is : 12345
*/

#include <stdio.h>
main() 
{
    int i,a,sum = 0,term = 1,a_term = 0;

    printf("Input the number of terms: ");
    scanf("%d", &a);

    printf("The series is: ");
    for (i = 1; i <= a; ++i) 
	{
        printf("%d ", term);
        sum += term;
        a_term = term * 10 + 1; 
        term = a_term;
    }
    printf("\nThe sum of the series = %d\n", sum);

}





/*
22.	Write a C program to check whether a given number is an armstrong number or not.
	Test Data :
		Input a number: 153
		Expected Output :
		153 is an Armstrong number.
*/

#include <stdio.h>
main() 
{
    int num,i, o, remainder, result = 0, n = 0;

    printf("Input a number: ");
    scanf("%d", &num);

    o = num;

    while (o!= 0) 
	{
        o/= 10;
        n++;
    }

    o= num;

    while (o!= 0) 
	{
		int p = 1;
		
        remainder = o% 10;
        
        for (i = 0; i < n; ++i) 
		{
            p*= remainder;
        }
        
        result += p;
        o/= 10;
    }


    if (result == num)
        printf("%d is an Armstrong number.\n", num);
    else
        printf("%d is not an Armstrong number.\n", num);

}




/*
23.	Write a C program to find the Armstrong number for a given range of number.
	Test Data :
		Input starting number of range: 1 Input ending number of range : 1000 
		Expected Output :
			Armstrong numbers in given range are: 1 153 370 371 407
*/

#include <stdio.h>

int main() {
    int start, end, num, o, remainder, i,result, n, a= 0;

    printf("Input starting number of range: ");
    scanf("%d", &start);
    printf("Input ending number of range: ");
    scanf("%d", &end);

    printf("Armstrong numbers in the given range are: ");

    for (num = start; num <= end; num++) 
	{
        o= num;
        n = 0;
        result = 0;

        
        while (o!= 0) 
		{
            o/= 10;
            n++;
        }

        o= num;

        while (o!= 0) 
		{
            remainder = o % 10;

            int p = 1;
            for (i = 0; i < n; ++i) 
			{
                p *= remainder;
            }

            result += p;
            o/= 10;
        }

        if (result == num) 
		{
            printf("%d ", num);
            a++;
        }
    }

    if (a== 0)
        printf("No Armstrong numbers found in the given range.\n");
    else
        printf("\n");

    return 0;
}



/*
24.	Write a program in C to display the pattern like a diamond.
*
***
*****
*******
*********
*******
*****
***
*
*/


#include<stdio.h>
main()
{
	int i,j,n;
		printf("Enter number : ");
		scanf("%d",&n);  
		for(i=1;i<=n;i++)   
		{
			for(j=1;j<=i;j++) 
			{
				printf(" * ");
			}
			printf("\n");
		}
		
	
	for(i=n-1;i>=1;i--)   
		{
			for(j=1;j<=i;j++) 
			{
				printf(" * ");
			}
			printf("\n");
		}
}




/*
25.	Write a C program to determine whether a given number is prime or not. 
	Test Data :
		Input a number: 13
	Expected Output :
		13 is a prime number.
*/

#include<stdio.h>
main()
{
	int n,i,flag=1;
	printf("\nEnter Number : ");
	scanf("%d",&n);
	
	for(i=2;i<n;i++)
	{
		if(n%i==0)
		{
			flag=0;
			break;
		}
	}
	
	if(flag==1)
	{
		printf("%d is prime number",n);
	}
	else
	{
		printf("%d is not prime number",n);
	}
}



/*
26.	Write a C program to display Pascal's triangle. Test Data :
Input number of rows: 5
Expected Output :
				1
	   	        1		1
		1		2		1
	1		3		3		1
1		4		6		4		1

*/

#include <stdio.h>

main() 
{
    int rows,i,j;

    printf("Input number of rows: ");
    scanf("%d", &rows);

    for (i = 0; i < rows; ++i) 
	{
        int coeff = 1;

        for (j = 0; j < rows - i - 1; ++j) 
		{
            printf("   ");
        }

        for (j = 0; j <= i; ++j) 
		{
            printf("%d   ", coeff);
            coeff = coeff * (i - j) / (j + 1);
        }

        printf("\n");
    }

}




/*
27.	Write a program in C to find the prime numbers within a range of numbers.
	Test Data :
		Input starting number of range: 1 Input ending number of range : 50 
	Expected Output :
		The prime number between 1 and 50 are :
		2 3 5 7 11 13 17 19 23 29 31 37 41 43 47

*/

#include<stdio.h>
main()
{
	int start,end,i,j;
	printf("Input starting number of range: ");
    scanf("%d", &start);
    printf("Input ending number of range: ");
    scanf("%d", &end);
	
	printf("The prime numbers between %d and %d are:\n", start, end);
	
	for(i=start;i<end;i++)
	{
		int flag=1;
		for(j=2;j*j<=i;j++)
		{
			if(i%j==0)
			{
				flag=0;
			    break;
			}
		}
		if(flag)
		{
			printf("%d ",i);
		}
	}
	
}




/*
28.	Write a program in C to display the first n terms of Fibonacci series. Fibonacci series 0 1 2 3 5 8 13 .....
	Test Data :
		Input number of terms to display : 10
	Expected Output :
 		Here is the Fibonacci series upto to 10 terms :
		0 1 1 2 3 5 8 13 21 34
*/

#include <stdio.h>
main() 
{
    int i,n, first = 0, second = 1, next;

    printf("Input number of terms to display: ");
    scanf("%d", &n);

    printf("Here is the Fibonacci series up to %d terms:\n", n);
    printf("%d %d ",first,second);
    for (i = 3; i <= n; i++) 
	{
        next = first + second;
        printf("%d ", next);
        first = second;
        second = next;
    }
}



/*
29.	Write a program in C to display the number in reverse order. 
	Test Data :
		Input a number: 12345
	Expected Output :
		The number in reverse order is : 54321
*/

#include <stdio.h>
main() 
{
    int num=0, i,reversed = 0,d;

    printf("Input a number: ");
    scanf("%d", &num);
     
    while (num != 0) 
	{
        d = num % 10;
        reversed = reversed * 10 + d;
        num /= 10;
    }

    printf("\nThe number in reverse order is: %d\n", reversed);

}



/*
30.	Write a program in C to check whether a number is a palindrome or not. 
	Test Data :
		Input a number: 121
	Expected Output :
		121 is a palindrome number.
*/

#include <stdio.h>
main() 
{
    int num=0, i,reversed = 0,d,sum;

    printf("Input a number: ");
    scanf("%d", &num);
     sum=num;
    while (num != 0) 
	{
        d = num % 10;
        reversed = reversed * 10 + d;
        num=num/10;
    }

    if(sum==reversed)
    {
    	printf("\n%d is a palindrome number.", sum);
	}
	else
	{
		printf("\n%d is not palindrome number.", sum);
	}

}


/*
31.	Write a program in C to find the number and sum of all integer between 100 and 200 which are divisible by 9.
	Expected Output :
		Numbers between 100 and 200, divisible by 9 :
		108 117 126 135 144 153 162 171 180 189 198
		The sum : 1683
*/

#include <stdio.h>

main() 
{
    int i,sum = 0;

    printf("Numbers between 100 and 200, divisible by 9:\n");
    
    for (i = 100; i <= 200; i++) 
	{
        if (i % 9 == 0) 
		{
            printf("%d ", i);
            sum += i; 
        }
    }

    printf("\nThe sum: %d\n", sum);

}



/*
32.	Write a C program to find HCF (Highest Common Factor) of two numbers. 
	Test Data :
		Input 1st number for HCF: 24 Input 2nd number for HCF: 28 	
Expected Output :
		HCF of 24 and 28 is : 4
*/

#include <stdio.h>
main() 
{
    int i,num1, num2, hcf,min;

    printf("Input 1st number for HCF: ");
    scanf("%d", &num1);
    printf("Input 2nd number for HCF: ");
    scanf("%d", &num2);
    
    if(num1<num2)
    {
    	min=num1;
	}
    else
    {
    	min=num2;
	}

    
    for (i = 1; i <= min; ++i) 
	{
        if (num1 % i == 0 && num2 % i == 0) 
		{
            hcf = i;
        }
    }

    printf("HCF of %d and %d is: %d\n", num1, num2, hcf);

}




/*
33.	Write a program in C to print a string in reverse order. 
	Test Data :
		Input a string to reverse : Welcome
	Expected Output :
		Reversed string is: emocleW
*/


#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    int len,i;
    printf("Input a string to reverse: ");
    gets(str);

    len= strlen(str);

    printf("Reversed string is: ");
    for (i=len-1; i >= 0; i--) 
	{
        printf("%c", str[i]);
    }
    printf("\n");

    return 0;
}
